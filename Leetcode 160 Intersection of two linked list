/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public int getSize(ListNode head){
        ListNode curr = head;
        int size=0;
        while(curr!=null){
            size++;
            curr=curr.next;
        }

        return size;
    }
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        int len1 = getSize(headA);
        int len2 = getSize(headB);
        ListNode p1=headA;
        ListNode p2=headB;
        if(len1<=len2){
            for(int i=0;i<len2-len1;i++){
                p2=p2.next;
            }
        }
        else{
            for(int i=0;i<len1-len2;i++){
                p1=p1.next;
            }
        }

        ListNode ans = null;

        while(p1!=null&&p2!=null){
            if(p1==p2){
                ans=p1;
                return ans;
            }
            else{
                p1=p1.next;
                p2=p2.next;
            
            }
        }
        return ans;
    }
}
